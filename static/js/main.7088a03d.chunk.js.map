{"version":3,"sources":["actions.js","components/reward/reward.js","components/table/table.js","reducer.js","index.js"],"names":["remove","value","type","add","undo","redo","save","Body","styled","div","Dummy","Close","button","Name","Reward","props","dispatch","rIndex","row","cIndex","col","onDragStart","event","dataTransfer","setData","this","onClick","data-testid","draggable","React","Component","connect","state","Container","TableContainer","ButtonRow","UndoRedoWrapper","Button","Row","EmptyElement","EmptyElementDummy","HeaderSmall","EmptyHeader","HeaderLarge","Line","Table","createHeader","header","push","key","onDrop","e","oldRow","getData","oldCol","onDragOver","preventDefault","stopPropagation","createTableRow","rowNum","i","rewards","createTableBody","body","localStorage","setItem","JSON","stringify","disabled","undoStates","length","redoStates","saved","savedRewards","parse","getItem","initialState","Array","fill","map","store","createStore","action","produce","draft","pop","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7088a03d.chunk.js","sourcesContent":["export function remove(value) {\r\n    return {\r\n        type : \"REMOVE\",\r\n        value\r\n    }\r\n}\r\n\r\nexport function add(value) {\r\n    return {\r\n        type : \"ADD\",\r\n        value\r\n    }\r\n}\r\n\r\nexport function undo(value) {\r\n    return {\r\n        type: \"UNDO\",\r\n        value\r\n    }\r\n}\r\n\r\nexport function redo(value) {\r\n    return {\r\n        type: \"REDO\",\r\n        value\r\n    }\r\n}\r\n\r\nexport function save(value) {\r\n    return{\r\n        type: \"SAVE\",\r\n        value\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { remove } from '../../actions.js';\r\n\r\nconst Body = styled.div`\r\n    flex-basis: 16.67%;\r\n    border: 1px gray solid;\r\n    margin: 10px;\r\n`;\r\n\r\nconst Dummy = styled.div`\r\n    height: 0;\r\n    padding-bottom: 100%;\r\n    position: relative;\r\n`;\r\n\r\nconst Close = styled.button`\r\n    background-color: white;\r\n    border: none;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    margin-top: 8px;\r\n    color: gray;\r\n`;\r\n\r\nconst Name = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    font-size: 200%;\r\n    color: gray;\r\n`;\r\n\r\nclass Reward extends React.Component {\r\n\r\n    remove = () => {\r\n        this.props.dispatch(remove({rIndex: this.props.row, cIndex: this.props.col}));\r\n    }\r\n\r\n    onDragStart = (event) => {\r\n        event.dataTransfer.setData(\"row\", this.props.row);\r\n        event.dataTransfer.setData(\"col\", this.props.col);\r\n    }\r\n\r\n    render() { \r\n        let button = <div></div>\r\n        if (this.props.col !== -1) {\r\n            button = <Close onClick={this.remove}>X</Close>\r\n        }\r\n        return(\r\n            <Body data-testid={\"R\"+this.props.row+\"C\"+this.props.col} onDragStart={(event) => this.onDragStart(event)} draggable>\r\n                <Dummy>\r\n                    <Name>R{this.props.row + 1}</Name>\r\n                    {button}\r\n                </Dummy>\r\n            </Body>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return{\r\n\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Reward);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Reward from '../reward/reward.js';\r\nimport styled from 'styled-components';\r\nimport { undo, redo, remove, add, save } from '../../actions.js';\r\n\r\nconst Container = styled.div`\r\n    width: 50%;\r\n    margin: auto;\r\n`;\r\n\r\nconst TableContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n`;\r\n\r\nconst ButtonRow = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst UndoRedoWrapper = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    border: none;\r\n    background-color: #cfcfcf;\r\n    margin: 5px 10px;\r\n    width: 75px;\r\n    height: 25px;\r\n    &:disabled {\r\n        background-color: #eeeeee;\r\n        color: #aaaaaa;\r\n    }\r\n`;\r\n\r\nconst Row = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst EmptyElement = styled.div`\r\n    flex-basis: 16.67%;\r\n    margin: 11px;\r\n`;\r\n\r\nconst EmptyElementDummy = styled.div`\r\n    height: 0;\r\n    padding-bottom: 100%;\r\n`;\r\n\r\nconst HeaderSmall = styled.div`\r\n    flex-basis: 16.67%;\r\n    margin: 10px;\r\n    padding-bottom: 10px;\r\n    text-align: center;\r\n    border-bottom: 1px solid gray;\r\n`;\r\n\r\nconst EmptyHeader = styled.div`\r\n    flex-basis: 16.67%;\r\n    margin: 10px;\r\n`;\r\n\r\nconst HeaderLarge = styled.div`\r\n    text-align: center;\r\n    flex-basis: calc(83.33% + 100px);\r\n    box-sizing: border-box;\r\n    margin: 10px;\r\n    border-bottom: 1px solid gray;\r\n`;\r\n\r\nconst Line = styled.div`\r\n    border-left: 1px solid gray;\r\n`;\r\n\r\nclass Table extends React.Component {\r\n\r\n    createHeader = () => {\r\n        let header = [];\r\n        header.push(\r\n            <Row key={0}>\r\n                <HeaderSmall>Rewards</HeaderSmall>\r\n                <Line/>\r\n                <HeaderLarge>Categories</HeaderLarge>\r\n                <Line/>\r\n            </Row>\r\n        );\r\n        header.push(\r\n            <Row key={1}> \r\n                <EmptyHeader></EmptyHeader>\r\n                <Line/>\r\n                <HeaderSmall>C1</HeaderSmall>\r\n                <Line/>\r\n                <HeaderSmall>C2</HeaderSmall>\r\n                <Line/>\r\n                <HeaderSmall>C3</HeaderSmall>\r\n                <Line/>\r\n                <HeaderSmall>C4</HeaderSmall>\r\n                <Line/>\r\n                <HeaderSmall>C5</HeaderSmall>\r\n                <Line/>\r\n            </Row>\r\n        );\r\n        return header;\r\n    }\r\n\r\n    onDrop = (e, row, col) => {\r\n        let oldRow = e.dataTransfer.getData(\"row\");\r\n        let oldCol = e.dataTransfer.getData(\"col\");\r\n        if (row == oldRow) {\r\n            if (oldCol !== -1) {\r\n                this.props.dispatch(remove({rIndex: oldRow, cIndex: oldCol}));\r\n            }\r\n            this.props.dispatch(add({rIndex: row, cIndex: col}));\r\n        }\r\n    }\r\n\r\n    onDragOver = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    createTableRow = (rowNum) => {\r\n        let row = [];\r\n        row.push(<Reward key={-1} row={rowNum} col={-1}></Reward>);\r\n        row.push(<Line key={\"line\"}></Line>)\r\n        for (let i = 0; i < 5; i++) {\r\n            if (this.props.rewards[rowNum][i]) {\r\n                row.push(<Reward row={rowNum} col={i} key={i}></Reward>);\r\n            } else {\r\n                row.push(<EmptyElement data-testid={\"R\"+rowNum+\"C\"+i} onDragOver={(e) => this.onDragOver(e, rowNum)} onDrop={(e) => this.onDrop(e, rowNum, i)}key={i}><EmptyElementDummy/></EmptyElement>)\r\n            }\r\n            row.push(<Line key={\"line\" + i}></Line>);\r\n        }\r\n        return row;\r\n    }\r\n\r\n    createTableBody = () => {\r\n        let body = [];\r\n        for (let i = 0; i < 5; i++) {\r\n            body.push(<Row key={i}>{this.createTableRow(i)}</Row>);\r\n        }\r\n        return body;\r\n    }\r\n\r\n    undo = () => {\r\n        this.props.dispatch(undo());\r\n    }\r\n\r\n    redo = () => {\r\n        this.props.dispatch(redo());\r\n    }\r\n\r\n    save = () => {\r\n        localStorage.setItem(\"react.miles.test.rewards\", JSON.stringify(this.props.rewards));\r\n        this.props.dispatch(save());\r\n    }\r\n\r\n    render() { \r\n        return(\r\n            <Container>\r\n                <ButtonRow>\r\n                    <UndoRedoWrapper>\r\n                        <Button onClick={this.undo} disabled={this.props.undoStates.length === 0}>Undo</Button>\r\n                        <Button onClick={this.redo} disabled={this.props.redoStates.length === 0}>Redo</Button>\r\n                    </UndoRedoWrapper>\r\n                    <Button onClick={this.save} disabled={this.props.saved}>{this.props.saved ? \"Saved\" : \"Save\"}</Button>\r\n                </ButtonRow>\r\n                <TableContainer>\r\n                    {this.createHeader()}\r\n                    {this.createTableBody()}\r\n                </TableContainer>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return{\r\n        rewards : state.rewards,\r\n        undoStates : state.undoStates,\r\n        redoStates : state.redoStates,\r\n        saved: state.saved\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Table);","import produce from 'immer';\r\n\r\nlet savedRewards = JSON.parse(localStorage.getItem(\"react.miles.test.rewards\"));\r\nexport const initialState = {\r\n  rewards : new Array(5).fill(true).map(() => new Array(5).fill(true)),\r\n  undoStates : [],\r\n  redoStates : [],\r\n  saved : true\r\n};\r\nif (savedRewards !== null) {\r\n  initialState.rewards = savedRewards;\r\n}\r\n\r\n\r\nexport function reducer(state = initialState, action) {\r\n  switch(action.type) {\r\n    case 'REMOVE':\r\n      return produce(state, draft => {\r\n        draft.undoStates.push(state.rewards);\r\n        draft.rewards[action.value.rIndex][action.value.cIndex] = false;\r\n        draft.redoStates = [];\r\n        draft.saved = false;\r\n      });\r\n    case 'ADD':\r\n      return produce(state, draft => {\r\n        draft.undoStates.push(state.rewards);\r\n        draft.rewards[action.value.rIndex][action.value.cIndex] = true;\r\n        draft.redoStates = [];\r\n        draft.saved = false;\r\n      });\r\n    case 'UNDO':\r\n      return produce(state, draft => {\r\n        draft.redoStates.push(draft.rewards);\r\n        draft.rewards = draft.undoStates.pop();\r\n        draft.saved = false;\r\n      });\r\n    case 'REDO':\r\n      return produce(state, draft => {\r\n        draft.undoStates.push(draft.rewards);\r\n        draft.rewards = draft.redoStates.pop();\r\n        draft.saved = false;\r\n      });\r\n    case 'SAVE':\r\n      return {\r\n        rewards: state.rewards,\r\n        undoStates: state.undoStates,\r\n        redoStates: state.redoStates,\r\n        saved : true\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport Table from './components/table/table.js';\n\nimport { reducer } from './reducer.js';\nimport './index.css';\n\n/*let savedRewards = JSON.parse(localStorage.getItem(\"react.miles.test.rewards\"));\nconst initialState = {\n  rewards : new Array(5).fill(true).map(() => new Array(5).fill(true)),\n  undoStates : [],\n  redoStates : [],\n  saved : true\n};\nif (savedRewards !== null) {\n  initialState.rewards = savedRewards;\n}\n\n\nexport function reducer(state = initialState, action) {\n  switch(action.type) {\n    case 'REMOVE':\n      return produce(state, draft => {\n        draft.undoStates.push(state.rewards);\n        draft.rewards[action.value.rIndex][action.value.cIndex] = false;\n        draft.redoStates = [];\n        draft.saved = false;\n      });\n    case 'ADD':\n      return produce(state, draft => {\n        draft.undoStates.push(state.rewards);\n        draft.rewards[action.value.rIndex][action.value.cIndex] = true;\n        draft.redoStates = [];\n        draft.saved = false;\n      });\n    case 'UNDO':\n      return produce(state, draft => {\n        draft.redoStates.push(draft.rewards);\n        draft.rewards = draft.undoStates.pop();\n        draft.saved = false;\n      });\n    case 'REDO':\n      return produce(state, draft => {\n        draft.undoStates.push(draft.rewards);\n        draft.rewards = draft.redoStates.pop();\n        draft.saved = false;\n      });\n    case 'SAVE':\n      return {\n        rewards: state.rewards,\n        undoStates: state.undoStates,\n        redoStates: state.redoStates,\n        saved : true\n      }\n    default:\n      return state;\n  }\n}*/\n\nconst store = createStore(reducer);\n\nconst App = () => (\n  <Provider store={store}>\n    <Table></Table>\n  </Provider>\n);\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}